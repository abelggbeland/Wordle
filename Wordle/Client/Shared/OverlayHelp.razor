@inject IGameService gameService
@inject IJSRuntime JSRuntime

<div class="overlay @CssOnClose" style="@(HelpOpen ? "position: fixed;" : Disply)" @onclick="CloseMenu">
    <div class="content center" id="game" style="height: 536px;">
        <header b-dktpmpdtlk="">
            <!--!--><h1 style="padding-top:10px;" b-dktpmpdtlk="" tabindex="-1">How to play</h1>
            <div class="close-icon">
                <game-icon icon="close" style="margin-right: 15px">
                    <svg xmlns="http://www.w3.org/2000/svg" height="24" viewBox="0 0 24 24" width="24">
                        <path fill="var(--color-tone-1)" d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"></path>
                    </svg>
                </game-icon>
            </div>
        </header>

        <slot>
            @if (HelpOpen)
            {
                <GameHelp animationString="flip-in"></GameHelp>
            }
        </slot>
    </div>
</div>
@code {
    [Parameter]
    public bool HelpOpen { get; set; }
    [Parameter]
    public EventCallback OnClose { get; set; }
    private string CssOnClose;
    private string Disply = "display: none;";
    private bool isData;

    private async Task CloseMenu()
    {
        if (HelpOpen)
        {
            CssOnClose = "closing";
            await Task.Delay(150);
            CssOnClose = "";
            Disply = "display: none;";
        }
        else
        {
            CssOnClose = "";
            Disply = "display: none;";
        }
        await JSRuntime.InvokeVoidAsync("focusInput", "backgroundkeyboard");
        await OnClose.InvokeAsync();
    }
}
