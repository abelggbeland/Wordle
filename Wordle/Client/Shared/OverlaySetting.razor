@inject IJSRuntime JSRuntime

<div class="overlay @CssOnClose" style="@(SettignsOpen ? "position: fixed;" : Disply)">
    <div class="content" id="game">
        <header>
            <h1>Settings</h1>
            <game-icon icon="close" @onclick="CloseMenu">
                <svg xmlns="http://www.w3.org/2000/svg" height="24" viewBox="0 0 24 24" width="24">
                    <path fill="var(--color-tone-1)" d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"></path>
                </svg>
            </game-icon>
        </header>
        <div class="content-container">
            <slot name="content">
                <Settings></Settings>
            </slot>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public bool SettignsOpen { get; set; }
    [Parameter]
    public EventCallback OnClose { get; set; }
    private string CssOnClose;
    private string Disply = "display: none;";

    private async Task CloseMenu()
    {
        if (SettignsOpen)
        {
            CssOnClose = "closing";
            await Task.Delay(150);
            CssOnClose = "";
            Disply = "display: none;";
        }
        else
        {
            CssOnClose = "";
            Disply = "display: none;";
        }
        await JSRuntime.InvokeVoidAsync("focusInput", "backgroundkeyboard");
        await OnClose.InvokeAsync();
    }
}
